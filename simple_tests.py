#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è API –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤
"""

from simple_api import SimpleIncidentAPI
from datetime import datetime


def test_list():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞"""
    print("üß™ –¢–µ—Å—Ç: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤")
    
    api = SimpleIncidentAPI()
    response = api.list_incidents(page=1, limit=5)
    
    print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
    if response.status_code == 200:
        data = response.json()
        print(f"   –ù–∞–π–¥–µ–Ω–æ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤: {len(data.get('data', []))}")
        print("   ‚úÖ –£—Å–ø–µ—à–Ω–æ!")
        return True
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text[:100]}")
        return False


def test_get():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞"""
    print("\nüß™ –¢–µ—Å—Ç: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞")
    
    api = SimpleIncidentAPI()
    response = api.get_incident(1)  # ID = 1
    
    print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
    if response.status_code == 200:
        data = response.json()
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {data.get('data', {}).get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        print("   ‚úÖ –£—Å–ø–µ—à–Ω–æ!")
        return True
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text[:100]}")
        return False


def test_search():
    """–¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞"""
    print("\nüß™ –¢–µ—Å—Ç: –ü–æ–∏—Å–∫ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤")
    
    api = SimpleIncidentAPI()
    response = api.search_incidents(page=1, limit=5)
    
    print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
    if response.status_code == 200:
        data = response.json()
        print(f"   –ù–∞–π–¥–µ–Ω–æ: {len(data.get('data', []))}")
        print("   ‚úÖ –£—Å–ø–µ—à–Ω–æ!")
        return True
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text[:100]}")
        return False


def test_create():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è"""
    print("\nüß™ –¢–µ—Å—Ç: –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞")
    
    api = SimpleIncidentAPI()
    name = f"–¢–µ—Å—Ç {datetime.now().strftime('%H:%M:%S')}"
    description = "–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –∏–Ω—Ü–∏–¥–µ–Ω—Ç"
    
    response = api.create_incident(name, description)
    
    print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
    if response.status_code in [200, 201]:
        print("   ‚úÖ –£—Å–ø–µ—à–Ω–æ!")
        return True
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text[:200]}")
        return False


def main():
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã"""
    print("üöÄ –ü—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç—ã API –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
    api = SimpleIncidentAPI()
    if not api.token:
        print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ login_and_get_token.py")
        return
    
    print(f"‚úÖ –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω: {api.token[:20]}...")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    tests = [test_list, test_get, test_search, test_create]
    passed = 0
    
    for test in tests:
        try:
            if test():
                passed += 1
        except Exception as e:
            print(f"   ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {passed}/{len(tests)} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏")
    
    if passed == len(tests):
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")


if __name__ == "__main__":
    main()
